// === ЁЯзк Test Module: Staff Use Case Tests ===
// ЁЯУЦ р╕Бр╕▓р╕гр╕Чр╕Фр╕кр╕нр╕Ъ Use Case р╣Вр╕Фр╕вр╣Гр╕Кр╣Й Mock objects р╣Ар╕Юр╕╖р╣Ир╕нр╣Бр╕вр╕Бр╕Бр╕▓р╕гр╕Чр╕Фр╕кр╕нр╕Ър╕нр╕нр╕Бр╕Ир╕▓р╕Бр╕Рр╕▓р╕Щр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Ир╕гр╕┤р╕З

#[cfg(test)]           // ЁЯФз compile р╣Ар╕Йр╕Юр╕▓р╕░р╕Хр╕нр╕Щ run tests р╣Ар╕Чр╣Ир╕▓р╕Щр╕▒р╣Йр╕Щ
mod tests {
    use std::sync::Arc;

    use mockall::predicate::eq;    // ЁЯОн Mock library р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Ир╕│р╕ер╕нр╕Зр╕Юр╕др╕Хр╕┤р╕Бр╕гр╕гр╕б

    use crate::{
        entities::items::Items as ItemsEntity,      // ЁЯПЫя╕П Domain Entity
        models::item::{Category, StaffAdding},      // ЁЯУЛ API Models
        repositories::items::MockItemsRepository,   // ЁЯОн Mock Repository (р╕Ир╕│р╕ер╕нр╕З)
        time_helper::TimerHelper,                   // тП░ Timer utility
        usecases::staff::StaffUsecase,              // ЁЯза Use Case р╕Чр╕╡р╣Ир╕Ир╕░р╕Чр╕Фр╕кр╕нр╕Ъ
    };

    // ЁЯзк Test Function: р╕Чр╕Фр╕кр╕нр╕Ър╕Бр╕▓р╕гр╣Ар╕Юр╕┤р╣Ир╕б Staff р╣Гр╕лр╕бр╣И
    #[tokio::test]         // ЁЯФз async test attribute р╕кр╕│р╕лр╕гр╕▒р╕Ъ tokio runtime
    async fn adding_test(){
        // ЁЯОн р╕кр╕гр╣Йр╕▓р╕З Mock Repository - р╕Ир╕│р╕ер╕нр╕Зр╕Юр╕др╕Хр╕┤р╕Бр╕гр╕гр╕бр╕Вр╕нр╕З Repository р╣Вр╕Фр╕вр╣Др╕бр╣Ир╕Хр╣Йр╕нр╕Зр╣Гр╕Кр╣Йр╕Рр╕▓р╕Щр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Ир╕гр╕┤р╕З
        let mut items_repository_mock = MockItemsRepository::new();

        // тП░ р╕кр╕гр╣Йр╕▓р╕З Mock Timer Helper - р╣Гр╕Кр╣Йр╣Ар╕зр╕ер╕▓р╕Чр╕╡р╣Ир╕Бр╕│р╕лр╕Щр╕Фр╣Др╕зр╣Йр╕ер╣Ир╕зр╕Зр╕лр╕Щр╣Йр╕▓р╣Бр╕Чр╕Щр╕Чр╕╡р╣Ир╣Ар╕зр╕ер╕▓р╕Ыр╕▒р╕Ир╕Ир╕╕р╕Ър╕▒р╕Щ
        let timer_helper = TimerHelper::Mock.creation();

        // ЁЯУе р╣Ар╕Хр╕гр╕╡р╕вр╕бр╕Вр╣Йр╕нр╕бр╕╣р╕е input р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Бр╕▓р╕гр╕Чр╕Фр╕кр╕нр╕Ъ

        // ЁЯФД р╣Бр╕Ър╕Ър╣Ар╕Фр╕┤р╕б: р╣Др╕бр╣Ир╕бр╕╡ category field
        // let req = StaffAdding {
        //     name: "wooden staff".to_string(),
        // };

        // тЬЕ р╣Бр╕Ър╕Ър╣Гр╕лр╕бр╣И: р╣Ар╕Юр╕┤р╣Ир╕б category field р╕Хр╕▓р╕б Clean Architecture pattern
        let req = StaffAdding {
            name: "wooden staff".to_string(),
            category: Category::Staff,
        };

        // ЁЯОн Mock Setup 1: р╕Бр╕│р╕лр╕Щр╕Фр╕Юр╕др╕Хр╕┤р╕Бр╕гр╕гр╕бр╕Вр╕нр╕З find_by_name()
        // р╕Ир╕│р╕ер╕нр╕Зр╕кр╕Цр╕▓р╕Щр╕Бр╕▓р╕гр╕Ур╣Мр╕Чр╕╡р╣Ир╣Др╕бр╣Ир╕Юр╕Ъ Staff р╕Кр╕╖р╣Ир╕нр╕Щр╕╡р╣Йр╣Гр╕Щр╕гр╕░р╕Ър╕Ъ (р╣Ар╕Юр╕╖р╣Ир╕нр╣Гр╕лр╣Йр╣Ар╕Юр╕┤р╣Ир╕бр╣Др╕Фр╣Й)
        items_repository_mock
            .expect_find_by_name()                      // ЁЯФН р╕Др╕▓р╕Фр╕лр╕зр╕▒р╕Зр╣Гр╕лр╣Йр╕бр╕╡р╕Бр╕▓р╕гр╣Ар╕гр╕╡р╕вр╕Б find_by_name
            .with(eq(req.name.clone()))                 // ЁЯУЛ р╕Фр╣Йр╕зр╕вр╕Юр╕▓р╕гр╕▓р╕бр╕┤р╣Ар╕Хр╕нр╕гр╣Мр╕Чр╕╡р╣Ир╕Хр╕гр╕Зр╕Бр╕▒р╕Ър╕Кр╕╖р╣Ир╕нр╕Чр╕╡р╣Ир╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╣Ар╕Юр╕┤р╣Ир╕б
            .times(1)                                   // ЁЯФв р╣Ар╕гр╕╡р╕вр╕Бр╕Др╕гр╕▒р╣Йр╕Зр╣Ар╕Фр╕╡р╕вр╕зр╣Ар╕Чр╣Ир╕▓р╕Щр╕▒р╣Йр╕Щ
            .returning(|_| Box::pin(async {Err(sqlx::Error::RowNotFound)})); // тЭМ р╕кр╣Ир╕Зр╕Бр╕ер╕▒р╕Ъ "р╣Др╕бр╣Ир╕Юр╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕е"

        // ЁЯОн Mock Setup 2: р╕Бр╕│р╕лр╕Щр╕Фр╕Юр╕др╕Хр╕┤р╕Бр╕гр╕гр╕бр╕Вр╕нр╕З insert()
        // р╕Ир╕│р╕ер╕нр╕Зр╕Бр╕▓р╕гр╕Ър╕▒р╕Щр╕Чр╕╢р╕Бр╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Гр╕лр╕бр╣Ир╕кр╕│р╣Ар╕гр╣Зр╕Ир╣Бр╕ер╕░р╣Др╕Фр╣Й ID = 1 р╕Бр╕ер╕▒р╕Ър╕бр╕▓
        items_repository_mock
            .expect_insert()                            // тЮХ р╕Др╕▓р╕Фр╕лр╕зр╕▒р╕Зр╣Гр╕лр╣Йр╕бр╕╡р╕Бр╕▓р╕гр╣Ар╕гр╕╡р╕вр╕Б insert
            .with(eq(ItemsEntity::new(                  // ЁЯУЛ р╕Фр╣Йр╕зр╕в Entity р╕Чр╕╡р╣Ир╕бр╕╡р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Хр╕гр╕Зр╕Хр╕▓р╕бр╕Чр╕╡р╣Ир╕Др╕▓р╕Фр╕лр╕зр╕▒р╕З
                req.name.clone(),
                Category::Staff.to_string(),
                Arc::clone(&timer_helper),
            )))
            .returning(|_| Box::pin(async {Ok(1)}));    // тЬЕ р╕кр╣Ир╕Зр╕Бр╕ер╕▒р╕Ъ ID = 1 (р╕кр╕│р╣Ар╕гр╣Зр╕И)

        // ЁЯОн Mock Setup 3: р╕Бр╕│р╕лр╕Щр╕Фр╕Юр╕др╕Хр╕┤р╕Бр╕гр╕гр╕бр╕Вр╕нр╕З find_by_id()
        // р╕Ир╕│р╕ер╕нр╕Зр╕Бр╕▓р╕гр╕Фр╕╢р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Чр╕╡р╣Ир╣Ар╕Юр╕┤р╣Ир╕Зр╕Ър╕▒р╕Щр╕Чр╕╢р╕Бр╕Бр╕ер╕▒р╕Ър╕бр╕▓р╣Ар╕Юр╕╖р╣Ир╕нр╕вр╕╖р╕Щр╕вр╕▒р╕Щ
        items_repository_mock
            .expect_find_by_id()                        // ЁЯФН р╕Др╕▓р╕Фр╕лр╕зр╕▒р╕Зр╣Гр╕лр╣Йр╕бр╕╡р╕Бр╕▓р╕гр╣Ар╕гр╕╡р╕вр╕Б find_by_id
            .with(eq(1))                                // ЁЯУЛ р╕Фр╣Йр╕зр╕в ID = 1
            .times(1)                                   // ЁЯФв р╣Ар╕гр╕╡р╕вр╕Бр╕Др╕гр╕▒р╣Йр╕Зр╣Ар╕Фр╕╡р╕вр╕зр╣Ар╕Чр╣Ир╕▓р╕Щр╕▒р╣Йр╕Щ
            .returning(|_| {                            // ЁЯФД р╕кр╣Ир╕Зр╕Бр╕ер╕▒р╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕е Entity р╕Чр╕╡р╣Ир╕кр╕бр╕Ър╕╣р╕гр╕Ур╣М
                Box::pin(async{
                    let t = TimerHelper::Mock.creation();
                    Ok(ItemsEntity {
                        id: Some(1),                    // ЁЯЖФ р╕бр╕╡ ID р╣Бр╕ер╣Йр╕з
                        name: "wooden staff".to_string(),
                        category: Category::Staff.to_string(),
                        created_at: t.now(),
                        updated_at: t.now(),
                    })
                })
            });

        // ЁЯПЧя╕П р╕кр╕гр╣Йр╕▓р╕З Use Case р╕Юр╕гр╣Йр╕нр╕б Mock dependencies
        let staff_usecase = StaffUsecase::creation(
            Arc::new(items_repository_mock),            // ЁЯОн р╣Гр╕Кр╣Й Mock Repository р╣Бр╕Чр╕Щр╕Вр╕нр╕Зр╕Ир╕гр╕┤р╕З
            timer_helper                                // тП░ р╣Гр╕Кр╣Й Mock Timer
        );

        // ЁЯзк р╕Чр╕Фр╕кр╕нр╕Ър╕Бр╕▓р╕гр╣Ар╕гр╕╡р╕вр╕Бр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ Use Case
        let result = match staff_usecase.adding(req).await {
            Ok(r) => r,                                 // тЬЕ р╕Др╕▓р╕Фр╕лр╕зр╕▒р╕Зр╣Гр╕лр╣Йр╕кр╕│р╣Ар╕гр╣Зр╕И
            Err(_) => panic!("adding error"),           // тЭМ р╕Цр╣Йр╕▓р╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Фр╣Гр╕лр╣Й panic
        };

        // ЁЯФН р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕зр╣Ир╕▓р╣Др╕Фр╣Й ID р╕Бр╕ер╕▒р╕Ър╕бр╕▓
        let id = match Some(result.id){
            Some(i) => i,                               // тЬЕ р╕бр╕╡ ID
            None => panic!("id is None"),               // тЭМ р╣Др╕бр╣Ир╕бр╕╡ ID (р╣Др╕бр╣Ир╕Др╕зр╕гр╣Ар╕Бр╕┤р╕Фр╕Вр╕╢р╣Йр╕Щ)
        };

        // тЬЕ Assertions: р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Ьр╕ер╕ер╕▒р╕Юр╕Шр╣М
        assert_eq!(result.id, id);                      // ЁЯЖФ ID р╕Хр╣Йр╕нр╕Зр╕Хр╕гр╕Зр╕Бр╕▒р╕Щ
        assert_eq!(result.name, "wooden staff");       // ЁЯУЭ р╕Кр╕╖р╣Ир╕нр╕Хр╣Йр╕нр╕Зр╕Хр╕гр╕Зр╕Бр╕▒р╕Ър╕Чр╕╡р╣Ир╕кр╣Ир╕Зр╣Ар╕Вр╣Йр╕▓р╕бр╕▓

    } // ЁЯОЙ р╕Бр╕▓р╕гр╕Чр╕Фр╕кр╕нр╕Ър╣Ар╕кр╕гр╣Зр╕Ир╕кр╕┤р╣Йр╕Щ - р╕Чр╕│р╣Гр╕лр╣Йр╕бр╕▒р╣Ир╕Щр╣Гр╕Ир╕зр╣Ир╕▓ Use Case р╕Чр╕│р╕Зр╕▓р╕Щр╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕З
}
